#!/usr/bin/env bash

set -euo pipefail

current_script_path=${BASH_SOURCE[0]}
plugin_dir=$(dirname "$(dirname "$current_script_path")")

# shellcheck source=../lib/utils.bash
source "${plugin_dir}/lib/utils.bash"

mkdir -p "$ASDF_DOWNLOAD_PATH"

get_arch() {
  uname -m | tr '[:upper:]' '[:lower:]'
}

get_platform() {
  uname -s | tr '[:upper:]' '[:lower:]'
}

get_download_url() {
  local version="$1"
  local platform="$2"
  local arch="$3"
  
  # Convert platform names to match GitHub releases
  case "$platform" in
    darwin) platform="apple-darwin" ;;
    linux) platform="unknown-linux-gnu" ;;
    *) fail "Platform $platform is not supported" ;;
  esac
  
  # Convert arch names to match GitHub releases
  case "$arch" in
    x86_64) arch="x86_64" ;;
    arm64|aarch64) arch="aarch64" ;;
    *) fail "Architecture $arch is not supported" ;;
  esac
  
  echo "https://github.com/NethermindEth/starknet-contract-verifier/releases/download/v${version}/voyager-${arch}-${platform}"
}

platform=$(get_platform)
arch=$(get_arch)
download_url=$(get_download_url "$ASDF_INSTALL_VERSION" "$platform" "$arch")

echo "* Downloading voyager release $ASDF_INSTALL_VERSION..."
curl -Lo "$ASDF_DOWNLOAD_PATH/voyager" "$download_url" || fail "Could not download $download_url"
chmod +x "$ASDF_DOWNLOAD_PATH/voyager"